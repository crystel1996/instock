# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  username: String!
  email: String!
  password: String!
  accountState: String!
  profilePicture: String!
}

type SettingMenu {
  id: ID!
  code: String!
  label: String!
  url: String!
  icon: String!
  type: String!
}

type UserCodeValidation {
  id: ID!
  code: String!
  idUser: String
  email: String!
  expiredAt: DateTime!
  type: String!
  status: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Login {
  accessToken: String!
}

type Register {
  accessToken: String!
}

type Query {
  me(input: UserMeInput!): User
  findUserByColumn(input: FindUserByColumnInput!): User
  login(input: LoginInput!): Login!
  verifyUserCodeValidation(input: VerifyUserCodeValidationInput!): Boolean!
  getAllSettingMenusByUser(input: GetAllSettingMenuByUserInput!): [SettingMenu!]!
}

input UserMeInput {
  accessToken: String!
}

input FindUserByColumnInput {
  value: String!
  column: String!
}

input LoginInput {
  email: String!
  password: String!
}

input VerifyUserCodeValidationInput {
  email: String!
  code: String!
  type: String!
}

input GetAllSettingMenuByUserInput {
  type: [String!]!
}

type Mutation {
  createUser(createUserData: CreateUserInput!): User!
  updateUserProfile(input: UpdateUserProfileInput!): User!
  updateUserAccountState(input: UpdateUserAccountStateInput!): User!
  updateUserProfilePicture(input: UpdateUserProfilePictureInput!): String!
  register(input: RegisterInput!): Register!
  resetPassword(input: ResetPasswordInput!): User!
  sendEmailResetPassword(input: SendEmailResetPasswordInput!): Boolean
  sendEmailProfileValidation(input: SendEmailProfileValidationInput!): Boolean
  generateUserCodeValidation(input: GenerateUserCodeValidationInput!): UserCodeValidation!
  createSettingMenu(input: CreateSettingMenuInput!): SettingMenu!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
  confirmPassword: String!
}

input UpdateUserProfileInput {
  id: String!
  username: String!
  email: String!
}

input UpdateUserAccountStateInput {
  id: String!
  accountState: String!
}

input UpdateUserProfilePictureInput {
  id: String!
  path: String!
}

input RegisterInput {
  username: String!
  email: String!
  password: String!
  confirmPassword: String!
}

input ResetPasswordInput {
  password: String!
  confirmPassword: String!
  email: String!
}

input SendEmailResetPasswordInput {
  to: String!
  subject: String!
  template: String!
  code: String!
}

input SendEmailProfileValidationInput {
  idUser: String!
  subject: String!
}

input GenerateUserCodeValidationInput {
  email: String!
  type: String!
}

input CreateSettingMenuInput {
  code: String!
  label: String!
  url: String!
  icon: String!
  type: String!
}